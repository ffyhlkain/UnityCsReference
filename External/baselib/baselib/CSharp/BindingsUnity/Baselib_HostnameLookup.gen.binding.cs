//
// File autogenerated from Include/C/Baselib_HostnameLookup.h
//

using System;
using System.Runtime.InteropServices;
using UnityEngine.Bindings;
using size_t = System.UIntPtr;

namespace Unity.Baselib.LowLevel
{
    [NativeHeader("baselib/CSharp/BindingsUnity/Baselib_HostnameLookup.gen.binding.h")]
    internal static unsafe partial class Binding
    {
        [StructLayout(LayoutKind.Sequential)]
        public struct Baselib_NetworkAddress_HostnameLookupHandle
        {
            /// <summary>Giving the struct consistent size between C and C++</summary>
            public byte _placeholder;
        }
        [FreeFunction(IsThreadSafe = true)]
        public static extern Baselib_NetworkAddress_HostnameLookupHandle* Baselib_NetworkAddress_HostnameLookup(byte* hostName, Baselib_NetworkAddress* dstAddress, Baselib_ErrorState* errorState);
        [FreeFunction(IsThreadSafe = true)]
        [return: MarshalAs(UnmanagedType.U1)]
        public static extern bool Baselib_NetworkAddress_HostnameLookupCheckStatus(Baselib_NetworkAddress_HostnameLookupHandle* task, Baselib_NetworkAddress* dstAddress, Baselib_ErrorState* errorState);
        [FreeFunction(IsThreadSafe = true)]
        public static extern void Baselib_NetworkAddress_HostnameLookupCancel(Baselib_NetworkAddress_HostnameLookupHandle* task);
    }
}
